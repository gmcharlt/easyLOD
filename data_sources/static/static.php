<?php

/**
 * Data source plugin for easyLOD that serves up static RDF files. 
 *
 * In this sample plugin, the RDF files were created from MODS documents
 * retrieved from http://www.islandscholar.ca/ and transformed into MODSRDF 
 * using the XSL stylesheet at http://www.loc.gov/standards/mods/modsrdf/modsrdf.xsl.
 * This transformation was done in a batch offline, not in realtime by this plugin.
 */

/**
 * Required function. 
 *
 * Defines configuration settings for this plugin.
 */
function dataSourceConfig() {
  return array(
    // Absolute path to the static files (in this sample plugin, the same directory
    // this script is in). Include the trailing '/'.
    'data_base_path' => dirname(__FILE__) . '/',
  );
}

/**
 * Required function.
 *
 * Defines the XML namespace that the elements generated by this plugin belong to.
 * In the case of an Islandora IR, the XML retrieved from Islandora already has 
 * xmlns attributes so we don't need to add any additional ones.
 */
function getDataSourceNamespaces() {
  return array();
}

/**
 * Required function.
 *
 * Defines the 'human-readable' web page for an item. In the case of the MODSRDF
 * files used in this example, the URL of the human-readable representation of
 * the resource is expressed in the 'rdf:about' attribute of the top-level
 * modsrdf:ModsResource element. Each plugin that serves up static RDF will need
 * will need to parse its own URL, or generate HTML from the static RDF files. 
 */
function getWebPage($identifier, $app) {
  $config = dataSourceConfig();
  list($namespace, $uniqueId) = explode(':', $identifier);
  $filePath = $config['data_base_path'] . $uniqueId. '.rdf';
  // Parse the value of the 'rdf:about' attribute of the top-level
  // modsrdf:ModsResource element. The XML looks like this: 
  // <modsrdf:ModsResource rdf:about="http://www.islandscholar.ca/fedora/repository/ir:6223">.
  $xml = simplexml_load_file($filePath);
  $xml->registerXPathNamespace("modsrdf", "http://www.loc.gov/mods/rdf/v1#");
  $xml->registerXPathNamespace("rdf", "http://www.w3.org/1999/02/22-rdf-syntax-ns#");
  $modsResource = $xml->xpath('//modsrdf:ModsResource');
  $url = (string) $modsResource[0]->attributes('rdf', TRUE)->about;
  $app->redirect($url, 303);
}

/**
 * Required function (if getResourceData() not used).
 *
 * Retrieve the raw RDF XML for the item and return it.
 */ 
function getResourceDataRaw($identifier, $xml, $app) {
  $config = dataSourceConfig();
  list($namespace, $uniqueId) = explode(':', $identifier);
  $filePath = $config['data_base_path'] . $uniqueId. '.rdf';
  if (file_exists($filePath)) {
    $xmlString = file_get_contents($filePath);
    $xml->writeRaw($xmlString);
    return $xml;
  }
  else {
    $app->halt(404);
  }
}
